{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/fullstackopen2019/part1/1. Introduction to React/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/fullstackopen2019/part1/1. Introduction to React/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; //  'Header'\n\nconst Header = props => {\n  console.log(props);\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.course);\n}; //  'Part'\n\n\nconst Part = props => {\n  console.log(props);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.name, \" \", props.exercises);\n}; //  'Content'\n\n\nconst Content = props => {\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Part, {\n    name: props.parts[0].name,\n    exercises: props.parts[0].exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Part, {\n    name: props.parts[1].name,\n    exercises: props.parts[1].exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Part, {\n    name: props.parts[2].name,\n    exercises: props.parts[2].exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}; //  'Total'\n\n\nconst Total = props => {\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Number of exercises \", props.total[0].exercises + props.total[1].exercises + props.total[2].exercises));\n}; // Statistic\n\n\nconst Statistic = props => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.title, \":\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.stat));\n}; // Button\n\n\nconst Button = props => {}; // Statistics\n\n\nconst Statistics = props => {\n  const bad = props.bad;\n  const good = props.good;\n  const neutral = props.neutral;\n  const all = bad + good + neutral;\n  const avrg = good - bad;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" statistics \"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Statistic, {\n    title: \"good\",\n    stat: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    title: \"neutral\",\n    stat: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    title: \"bad\",\n    stat: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    title: \"average\",\n    stat: avrg / all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Statistic, {\n    title: \"Positive\",\n    stat: good / all,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))));\n}; // 'App'\n\n\nconst App = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of component',\n      exercises: 14\n    }]\n  };\n\n  const addGood = () => {\n    setGood(good + 1);\n  };\n\n  const addNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const addBad = () => {\n    setBad(bad + 1);\n  };\n\n  function Feedback() {\n    if (good > 0 || bad > 0 || neutral > 0) {\n      return React.createElement(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"No feedback given\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Give feedback\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addGood,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addNeutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addBad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"bad\"), React.createElement(Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(Header, {\n    course: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Total, {\n    total: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/mac/Desktop/fullstackopen2019/part1/1. Introduction to React/src/index.js"],"names":["React","useState","ReactDOM","Header","props","console","log","course","Part","name","exercises","Content","parts","Total","total","Statistic","title","stat","Button","Statistics","bad","good","neutral","all","avrg","App","setGood","setNeutral","setBad","addGood","addNeutral","addBad","Feedback","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n//  'Header'\nconst Header = (props) => {\n    console.log(props)\n    return (\n        <h1>{props.course}</h1>\n    )\n}\n\n//  'Part'\nconst Part = (props) => {\n    console.log(props)\n    return (\n        <p>{props.name} {props.exercises}</p>\n    )\n}\n\n//  'Content'\nconst Content = (props) => {\n    console.log(props)\n    return (\n        <div>\n            <Part name = {props.parts[0].name}\n                  exercises = {props.parts[0].exercises}\n            />\n            <Part name = {props.parts[1].name}\n                  exercises = {props.parts[1].exercises}\n            />\n            <Part name = {props.parts[2].name}\n                  exercises = {props.parts[2].exercises}\n            />\n        </div>\n    )\n}\n\n//  'Total'\nconst Total = (props) => {\n    console.log(props)\n    return (\n        <div>\n            <p>Number of exercises {\n                props.total[0].exercises +\n                props.total[1].exercises +\n                props.total[2].exercises}\n            </p>\n        </div>\n    )\n}\n\n// Statistic\nconst Statistic = (props) => {\n    return (\n        <tr>\n        <td>{props.title}:</td>\n        <td>{props.stat}</td>\n        </tr>\n    )\n}\n\n// Button\nconst Button = (props) => {\n\n}\n\n// Statistics\nconst Statistics = (props) => {\n    const bad = props.bad\n    const good = props.good\n    const neutral = props.neutral\n    const all = bad + good + neutral\n    const avrg = good - bad\n    return (\n        <div>\n        <h2> statistics </h2>\n        <table>\n        <tbody>\n        <Statistic title=\"good\" stat={good}/>\n        <Statistic title=\"neutral\" stat={neutral}/>\n        <Statistic title=\"bad\" stat={bad}/>\n        <Statistic title=\"average\" stat={avrg / all}/>\n        <Statistic title=\"Positive\" stat={good / all}/>\n\n        </tbody>\n        </table>\n        </div>\n    )\n}\n\n// 'App'\nconst App = (props) => {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n    const course = {\n        name: 'Half Stack application development',\n        parts:  [\n            {\n            name:       'Fundamentals of React',\n            exercises:  10\n            },\n            {\n            name:       'Using props to pass data',\n            exercises:  7\n            },\n            {\n            name: 'State of component',\n            exercises:  14\n            }\n        ]\n    }\n\n    const addGood = () => {\n        setGood(good + 1)\n    }\n\n    const addNeutral = () => {\n        setNeutral(neutral + 1)\n    }\n\n    const addBad = () => {\n        setBad(bad + 1)\n    }\n\n    function Feedback() {\n        if (good > 0 || bad > 0 || neutral > 0) {\n          return <Statistics good={good} neutral={neutral} bad={bad} />\n\n        }\n        return <h4>No feedback given</h4>\n    }\n\n    return (\n        <div>\n            <div>\n            <h1>\n            Give feedback\n            </h1>\n            <button type=\"button\" onClick={addGood}>good</button>\n            <button type=\"button\" onClick={addNeutral}>neutral</button>\n            <button type=\"button\" onClick={addBad}>bad</button>\n            <Feedback />\n            </div>\n            <Header course={course.name} />\n            <Content parts = {course.parts} />\n            <Total total = {course.parts} />\n        </div>\n    )\n}\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}